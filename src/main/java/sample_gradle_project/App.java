/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package sample_gradle_project;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.web.bind.annotation.RequestMethod;
import java.util.*;
import org.springframework.web.bind.annotation.CrossOrigin;

@SpringBootApplication
@RestController
@CrossOrigin
public class App {
  @RequestMapping("/")
  public String getGreeting() {
      return "Hello world.";
  }

  @RequestMapping("/get_your_name_and_age")
  public String getNameAndAge() {
      return "My name is Sample java application and my age is young as you are";
  }

  @RequestMapping(value="/get_json_response", method=RequestMethod.GET, produces="application/json")
  public HashMap<String, Object> getJsonResponse() {
    HashMap<String, String> hm = new HashMap<>();
    hm.put("Name", "Niranjan");
    hm.put("Age", "23");
    HashMap<String, Object> map = new HashMap<>();
    map.put("key1", "value1");
    map.put("results", hm);
    return map;
  }

  @RequestMapping(value="/get_json_response_post", method = RequestMethod.POST)
  public HashMap<String, String> getJsonResponsePost(@RequestBody HashMap<String, String> payload) {
    HashMap<String, String> hm = new HashMap<>();
    hm.put("Name", payload.get("Name"));
    hm.put("Age", payload.get("Age"));
    return hm;
  }

  @RequestMapping(value="/convert_DNA_to_RNA", method = RequestMethod.POST, produces="application/json")
  public HashMap<String, StringBuilder> convertDnaToRna(@RequestBody HashMap<String, String> payload) {
    String dnaComponent[] = {"G", "C", "T", "A"};
    String rnaComponent[] = {"C", "G", "A", "U"};
    Map< String,String> hm = new HashMap< String,String>();
    for(int i=0;i<dnaComponent.length; i++){
      hm.put(dnaComponent[i], rnaComponent[i]);
    }
    String dnaValue = payload.get("dnaValue");
    StringBuilder rnaValue = new StringBuilder(dnaValue);
    for(int i=0; i<dnaValue.length(); i++){
      char characterFound;
      try{
        characterFound = (hm.get(("" + dnaValue.charAt(i)).toUpperCase())).charAt(0);
      }
      catch(Exception e){
        characterFound = 'N';
      }
      rnaValue.setCharAt(i, characterFound);
    }
    HashMap<String, StringBuilder> finalMap = new HashMap<>();
    finalMap.put("rnaStrand", rnaValue);
    return finalMap;
  }

  public static void main(String[] args) {
      SpringApplication.run(App.class, args);
  }
}
